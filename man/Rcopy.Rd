% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rcopy.R
\name{Rcopy}
\alias{Rcopy}
\title{Copy and open R and Rmd files with QMS approved headers.}
\usage{
Rcopy(from = NULL, to = NULL, version = NULL, open = rstudioapi::isAvailable())
}
\arguments{
\item{from}{path or GitLab web URL of original R program or Rmd file.
Defaults to the path of the source editor context.}

\item{to}{path or directory of new file. If `to` is a directory, `from` is
copied to that directory. Defaults to the basename of the `from` file.}

\item{version}{either \code{NULL} for the current R version, or a
\code{character} in the form \code{"N.n.n"} or \code{"Nnn"}.}

\item{open}{\code{logical} indicating whether to open files in RStudio}
}
\value{
invisibly returns \code{NULL}
}
\description{
This function is somewhat similar to the Cognigen system command
\code{Rcopy}, but it is not called.
}
\examples{
\dontrun{
# Copy an R program from some directory to the working directory with the same file name
Rcopy("../../d1pk/R/file.R")

# Copy an R program from some directory to the working directory with a new name
Rcopy("../../d1pk/R/file.R", "new-file.R")

# Copy the active R program to the working directory with the same file name
Rcopy()

# Copy the active R program to the working directory with a new name
Rcopy(to = "new-file.R")

# R Markdown works too
Rcopy("markdown-file.Rmd", "new-markdown-file.Rmd")

# Copy an R program from GitLab to an "R/includes" directory
Rcopy(
  "https://gitlab.cognigencorp.com/r/shared-code/-/blob/master/functions/sstat.R",
  "../R/includes"
)
}

}
\seealso{
\code{?interactivecog::Rcopy_shared_code} for simpler copying from
  the shared-code repository; \code{\link{Redit}} for creating R programs
}
