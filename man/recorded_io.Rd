% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/record_io.R
\name{recorded_io}
\alias{recorded_io}
\alias{record_input}
\alias{record_output}
\alias{clear_recorded_io}
\title{Utility function to collect the paths of input and output files used and 
created in a R script, and print a short report in the console or log file.}
\usage{
record_input(call, quiet = FALSE)

record_output(call, quiet = FALSE)

recorded_io()

clear_recorded_io()
}
\arguments{
\item{call}{a function call to read a data file or create a new file; 
alternatively, call could be a simple file path.}

\item{quiet}{a logical value indicating whether messages should be printed 
(FALSE; default) or not (TRUE).}
}
\value{
If \code{call} is a function call, \code{record_input} will execute
this call and returns its output. If \code{call} is a file path, 
\code{record_input} will simply return the value of \code{call}.

In \code{record_output}, \code{call} is expected to create one or more files
as a side-effect of the call. No return value is expected nor is returned.

Calling either \code{record_input} or \code{record_output} will cause 
information about file paths to be stored in a dedicated environment. If 
\code{call} is a function call, both functions expect attempts to detect 
file names and paths based upon known arguments of common functions that read
or creates files; if the argument of the \code{call} are not recognized, both
\code{record_input} and \code{record_output} will assume that the 1st argument 
\code{call} provided the path of the file to be recorded.

By default, a message will be printed by both \code{record_input} and 
\code{record_output} to report the path of the files that were stored.

Ultimately, the collected information can be summarized by calling 
\code{recorded_io} typically at the end of R script. In a .Rmd file,
\code{recorded_io} would need to be called inside a chunk set with 
the \code{message = FALSE} option so the information could be printed 
to console or the .Rout file when .Rmd file is rendered using 
\code{utilscognige::render}.

In some cases (eg, in an interactive R session), it could be useful to call
the \code{clear_recorded_io} function to erase all the recorded input and
output file paths.
}
\description{
Utility function to collect the paths of input and output files used and 
created in a R script, and print a short report in the console or log file.
}
\examples{

\donttest{
df <- record_input(
  read.csv(
    file = '/path/to/existing/file.csv',
    header = TRUE
  )
)
df <- record_input(
  haven::read_sas('/path/to/existing/file.sas7bdat')
)
record_input('../../some/adhoc/file.RDS')

# Information will not be recorded if the call fails
df <- record_input(
  read.csv(
    file = '/path/to/invalid/file.csv',
    header = TRUE
  )
)

record_output(
  png('Rplots_\%03d.png')
)
plot(1) ; plot(2)
dev.off()

recorded_io()
}

}
